TODO
====

- inlining dependencies should also be able to call function (analog of FutureClass)


- (?) class should depend from its 'my' class

- fix some failures with ScriptTag materialization under FF 

- add standard resolving capabilities



- implement common mechanism for collecting stringified dependencies and replacing them with real classes
- call arbitrary function as dependency source (should return descriptors)    
    partially implemented


- improve versioning support and test coverage


- Adapt grouped dependencies loading mode


- refactor to allow dependencies from classes w/o JooseX.Namespace.Depended metarole
    almost implemented (need to completely cleanup JooseX.Namespace.Depended.Meta from code), needs test coverage + a hook into NS.Manager


DONE
====

- add Joose.FutureClass helper Joose.FutureClass = function (class) { return function () { return eval(class) } }
- Change loading of GMap engine to something else, more predictable and w/o errors
- fix double BEGIN invoking
- fix namespace managers executeIn to omit the args?
- be able to load the 'meta' class 
- switch materialiaztion (handleDependencies) interface to async?  (to execute a whole source file with several classes before fireing 'ready' listeners)
