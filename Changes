Release history for JooseX.Namespace.Depended

{{ $NEXT }}

0.11      2010-11-01 13:19

    - re-release on `npm`, no functional changes

0.10      2010-10-05 12:35

    - re-release with fixes in package.json, no functional changes

0.09      2010-09-22 00:27

    - 'todo' dir renamed to 'misc' to work on case-insesitive platforms

0.08      2010-09-10 15:10

    - added `Task.JooseX.Namespace.Depended.Auto` bundle, which autoconfigurate depending from the
      platform (browser/nodejs)

0.07      2010-08-31 15:36

    - really fixed NodeJS materialization

0.06      2010-08-31 15:16

    - implemented "Delayed dependencies" feature
    
    - refactored out 'inturl/exturl' resources
    - refactored out "Locator.URL" role
    
    - "nonjoose" resource refactored into more general "javascript" resource
    - "javascript" resource is automatically created, if token contain '/' or ends with '.js' 
    
    - added 'presence' attribute to base resource (can be specified in token)
    
    - improved version check (don't remove the VERSION from class definition)
    - improved test coverage for loading "static" files
    
    - fixed NodeJS materialization role

0.05      2010-07-05 19:21

    - switched to Dist::Zilla
    
    - added `skip` sections to test suite to allow cross-platform testing
    
    - test suite now passes on the NodeJS platform

0.04    

    [ENHANCEMENTS]
    
        - greatly improved synchronous-ness of the dependencies loading, if the files are bundled in proper order 
    
    [API CHANGES]

    -none-

    [BUG FIXES]
    
        - fixed bug, when already loaded non-joose classes could been handled asynchronously (instead of synchronously) 

0.03    

    [ENHANCEMENTS]
    
        - implemented 'require' resource which is just a basic wrapper around the CommonJS module
    
    [API CHANGES]

    -none-

    [BUG FIXES]
    
    -none-




0.02    

    [ENHANCEMENTS]
    
    - added non-blocking NodeJS transport and materialization roles
    
    - added NodeJS package: Task.JooseX.Namespace.Depended.NodeJS
      
    - If some class don't have the dependencies, than it becomes "ready" synchronously.
      Thus, if we have a concatenated file with the inter-dependended classes, which are
      sorted in the dependency order, it will be executed synchronously
    
    [API CHANGES]

    `materialize` method of Resource now also receives the url of the loaded resource as 2nd argument
    

    [BUG FIXES]
    
    -none-

